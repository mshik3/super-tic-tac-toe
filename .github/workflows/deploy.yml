name: Deploy Super Tic-Tac-Toe

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Prevent multiple deployments from running simultaneously
concurrency:
  group: deployment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quality gates - run linting and type checking first
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install frontend dependencies
        run: npm ci

      - name: Lint frontend
        run: npm run lint

      - name: Type check frontend
        run: npx tsc --noEmit

      - name: Install worker dependencies
        working-directory: ./worker
        run: npm ci

      - name: Type check worker
        working-directory: ./worker
        run: npx tsc --noEmit

  # Build and deploy frontend to Cloudflare Pages
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build
        env:
          VITE_WORKER_URL: https://super-tic-tac-toe-worker.mshik3.workers.dev

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: super-tic-tac-toe-frontend
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  # Deploy worker to Cloudflare Workers
  deploy-worker:
    name: Deploy Worker
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install worker dependencies
        working-directory: ./worker
        run: npm ci

      - name: Deploy worker
        working-directory: ./worker
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  # Notify deployment completion
  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-worker]
    if: success() && github.ref == 'refs/heads/main'
    steps:
      - name: Deployment Success
        run: |
          echo "ðŸš€ Deployment completed successfully!"
          echo "Frontend: https://super-tic-tac-toe-frontend.pages.dev"
          echo "Worker: https://super-tic-tac-toe-worker.mshik3.workers.dev"
